You are given rectangular matrix. The matrix is filled with numbers that are power of 2, as follows:
•	The bottom left corner holds the value 1
•	The next cell above holds value of 2, the next cell above holds of 4, etc…
•	The second cell the bottom row holds a value of 2, the cell next to it holds a value of 4
You have a pawn on the field. The pawn can only move to the cells that directly above, below it or right/left of it. We have four directions UP, DOWN, LEFT, RIGHT.
Given that initially the pawn starts at the bottom left corner and a list of cells that the pawn must reach calculate the sum of the cells that the pawn has to go through.
The value of each cell is calculated only once, i.e. if the pawn visits the same cell more than once, its value is added to the result only the first time (the value is collected).
The top row is at position 0, the bottommost row is at position ROWS – 1.
The pawn goes from one cell to the other, following the rules:
•	First go to the target column
•	Second go to the target row
Example:
 
The pawn collects values: 1, 2, 4, 8, 16, 32, 16, 8, 4, 8, 16, 32, 64, 128, 256 and 512. Their sum is 1107.
%
5
6
4
14 27 1 5
%
1107

